#!/bin/bash

set -o pipefail -eu

if [ -z "$1" ]; then
    echo "Usage: aplcnf <shard>"
    exit
fi

TMPDIR=$(mktemp -d)
mkdir -p $TMPDIR/cache
trap "rm -rf $TMPDIR" EXIT

if [ -d "$PWD/.git" ]; then
    APLCNF_SHARDS_PATH="$PWD/shards"
elif [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit
else
    APLCNF_REPO_URL="https://github.com/nsg/aplcnf.git"
    git clone --depth 1 "$APLCNF_REPO_URL" "$TMPDIR/aplcnf"
    APLCNF_SHARDS_PATH="$TMPDIR/aplcnf/shards"

    if ! cmp -s "$0" "$TMPDIR/aplcnf/aplcnf"; then
        echo "Press enter to updating aplcnf and re-execute the new script! "; read
        cp "$TMPDIR/aplcnf/aplcnf" "$0"
        exec "$0" $@
    fi
fi

download_and_verify() {
    local url="$1"
    local sha256="$2"
    local filename="$3"

    wget -c "$url" -O "$TMPDIR/cache/$filename"
    echo "$sha256  $TMPDIR/cache/$filename" | sha256sum -c -
}

if [ -e "$APLCNF_SHARDS_PATH/$1" ]; then
    . "$APLCNF_SHARDS_PATH/$1"
else
    echo "Shard not found"
fi
